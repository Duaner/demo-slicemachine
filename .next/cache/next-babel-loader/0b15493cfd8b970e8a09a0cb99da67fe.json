{"ast":null,"code":"var _jsxFileName = \"/Users/renaudbressand/Work/an-awesome-next-app-this-is-like-the-1000-try/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Client } from \"../prismic\";\nimport SliceZone from \"next-slicezone\";\nimport { useGetStaticProps, useGetStaticPaths } from \"next-slicezone/hooks\";\nimport resolver from \"../sm-resolver.js\";\n\nconst Page = props => __jsx(SliceZone, _extends({}, props, {\n  resolver: resolver,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 25\n  }\n})); // Fetch content from prismic\n\n\nexport const getStaticProps = useGetStaticProps({\n  client: Client(),\n  uid: ({\n    params\n  }) => params.uid\n});\nexport const getStaticPaths = useGetStaticPaths({\n  client: Client(),\n  type: \"page\",\n  uid: \"homepage\",\n  fallback: true,\n  // process.env.NODE_ENV === 'development',\n  formatPath: ({\n    uid\n  }) => ({\n    params: {\n      uid\n    }\n  })\n});\nexport default Page;","map":{"version":3,"sources":["/Users/renaudbressand/Work/an-awesome-next-app-this-is-like-the-1000-try/pages/index.js"],"names":["Client","SliceZone","useGetStaticProps","useGetStaticPaths","resolver","Page","props","getStaticProps","client","uid","params","getStaticPaths","type","fallback","formatPath"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,sBAArD;AAEA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW,MAAC,SAAD,eAAeA,KAAf;AAAsB,EAAA,QAAQ,EAAEF,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB,C,CAEA;;;AACA,OAAO,MAAMG,cAAc,GAAGL,iBAAiB,CAAC;AAC9CM,EAAAA,MAAM,EAAER,MAAM,EADgC;AAE9CS,EAAAA,GAAG,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgBA,MAAM,CAACD;AAFkB,CAAD,CAAxC;AAKP,OAAO,MAAME,cAAc,GAAGR,iBAAiB,CAAC;AAC9CK,EAAAA,MAAM,EAAER,MAAM,EADgC;AAE9CY,EAAAA,IAAI,EAAE,MAFwC;AAG9CH,EAAAA,GAAG,EAAE,UAHyC;AAI9CI,EAAAA,QAAQ,EAAE,IAJoC;AAI9B;AAChBC,EAAAA,UAAU,EAAE,CAAC;AAAEL,IAAAA;AAAF,GAAD,MAAc;AAAEC,IAAAA,MAAM,EAAE;AAAED,MAAAA;AAAF;AAAV,GAAd;AALkC,CAAD,CAAxC;AAQP,eAAeJ,IAAf","sourcesContent":["import { Client } from \"../prismic\";\nimport SliceZone from \"next-slicezone\";\nimport { useGetStaticProps, useGetStaticPaths } from \"next-slicezone/hooks\";\n\nimport resolver from \"../sm-resolver.js\";\n\nconst Page = (props) => <SliceZone {...props} resolver={resolver} />;\n\n// Fetch content from prismic\nexport const getStaticProps = useGetStaticProps({\n  client: Client(),\n  uid: ({ params }) => params.uid,\n});\n\nexport const getStaticPaths = useGetStaticPaths({\n  client: Client(),\n  type: \"page\",\n  uid: \"homepage\",\n  fallback: true, // process.env.NODE_ENV === 'development',\n  formatPath: ({ uid }) => ({ params: { uid } }),\n});\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}