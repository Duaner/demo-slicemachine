{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/renaudbressand/Work/an-awesome-next-app-this-is-like-the-1000-try/node_modules/next-slicezone/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { pascalize } from 'sm-commons/utils/str';\nimport EmptyState from './EmptyState';\nexport default (function (_ref) {\n  var _ref$registry = _ref.registry,\n      registry = _ref$registry === void 0 ? {} : _ref$registry,\n      slices = _ref.slices,\n      endpoint = _ref.endpoint,\n      _ref$resolver = _ref.resolver,\n      resolver = _ref$resolver === void 0 ? function () {\n    return null;\n  } : _ref$resolver;\n\n  if (!slices || !slices.length) {\n    return true ? __jsx(EmptyState, {\n      endpoint: endpoint,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }) : null;\n  }\n\n  return slices.map(function (slice, i) {\n    var sliceName = pascalize(slice.slice_type);\n    var maybeRegister = registry[sliceName];\n\n    if (!maybeRegister) {\n      if (true) {\n        console.error(\"No component was registered for slice of type \\\"\".concat(slice_type, \"\\\"\"));\n      }\n\n      return null;\n    }\n\n    var Component = typeof maybeRegister === 'object' ? resolver(_objectSpread(_objectSpread({}, maybeRegister), {}, {\n      slice: slice,\n      i: i\n    })) : maybeRegister;\n\n    if (Component) {\n      return __jsx(Component, {\n        key: \"slice-\".concat(i + 1),\n        slice: slice,\n        i: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return null;\n  });\n});","map":{"version":3,"sources":["/Users/renaudbressand/Work/an-awesome-next-app-this-is-like-the-1000-try/node_modules/next-slicezone/index.js"],"names":["React","pascalize","EmptyState","registry","slices","endpoint","resolver","length","map","slice","i","sliceName","slice_type","maybeRegister","console","error","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,gBAAe,gBAAgE;AAAA,2BAA7DC,QAA6D;AAAA,MAA7DA,QAA6D,8BAAlD,EAAkD;AAAA,MAA9CC,MAA8C,QAA9CA,MAA8C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,2BAA5BC,QAA4B;AAAA,MAA5BA,QAA4B,8BAAjB;AAAA,WAAM,IAAN;AAAA,GAAiB;;AAC7E,MAAI,CAACF,MAAD,IAAW,CAACA,MAAM,CAACG,MAAvB,EAA+B;AAC7B,WAAO,OACH,MAAE,UAAF;AAAa,MAAA,QAAQ,EAAEF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,GAEH,IAFJ;AAGD;;AAED,SAAOD,MAAM,CAACI,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR,EAAc;AAC9B,QAAMC,SAAS,GAAGV,SAAS,CAACQ,KAAK,CAACG,UAAP,CAA3B;AACA,QAAMC,aAAa,GAAGV,QAAQ,CAACQ,SAAD,CAA9B;;AAEA,QAAI,CAACE,aAAL,EAAoB;AAClB,gBAA2C;AACzCC,QAAAA,OAAO,CAACC,KAAR,2DAAgEH,UAAhE;AACD;;AACD,aAAO,IAAP;AACD;;AAED,QAAMI,SAAS,GAAG,OAAOH,aAAP,KAAyB,QAAzB,GAAoCP,QAAQ,iCAAMO,aAAN;AAAqBJ,MAAAA,KAAK,EAALA,KAArB;AAA4BC,MAAAA,CAAC,EAADA;AAA5B,OAA5C,GAA+EG,aAAjG;;AACA,QAAIG,SAAJ,EAAe;AACb,aAAO,MAAC,SAAD;AAAW,QAAA,GAAG,kBAAWN,CAAC,GAAG,CAAf,CAAd;AAAkC,QAAA,KAAK,EAAED,KAAzC;AAAiD,QAAA,CAAC,EAAEC,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WAAO,IAAP;AACD,GAhBM,CAAP;AAkBD,CAzBD","sourcesContent":["import React from 'react'\n\nimport { pascalize } from 'sm-commons/utils/str'\nimport EmptyState from './EmptyState'\n\nexport default ({ registry = {}, slices, endpoint, resolver = () => null }) => {\n  if (!slices || !slices.length) {\n    return process.env.NODE_ENV !== 'production'\n      ? < EmptyState endpoint={endpoint} />\n      : null\n  }\n\n  return slices.map((slice, i) => {\n    const sliceName = pascalize(slice.slice_type)\n    const maybeRegister = registry[sliceName]\n\n    if (!maybeRegister) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(`No component was registered for slice of type \"${slice_type}\"`)\n      }\n      return null\n    }\n\n    const Component = typeof maybeRegister === 'object' ? resolver({ ...maybeRegister, slice, i }) : maybeRegister\n    if (Component) {\n      return <Component key={`slice-${i + 1}`} slice={slice}  i={i} />\n    }\n    return null\n  })\n\n}\n"]},"metadata":{},"sourceType":"module"}