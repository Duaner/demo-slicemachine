{"ast":null,"code":"var _jsxFileName = \"/Users/renaudbressand/Work/an-awesome-next-app-this-is-like-the-1000-try/sm-resolver.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as Slices from './slices';\nimport { Slices as EssentialSlices } from 'essential-slices';\n\nconst __allSlices = _objectSpread(_objectSpread({}, EssentialSlices), Slices);\n\nconst NotFound = ({\n  sliceName\n}) => {\n  console.log(`[sm - resolver] component \"${sliceName}\" not found.`);\n  return true ? __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 49\n    }\n  }, \"component \\\"\", sliceName, \"\\\" not found.\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 93\n    }\n  });\n};\n\nexport default (({\n  sliceName,\n  i\n}) => {\n  return __allSlices[sliceName] ? __allSlices[sliceName] : () => __jsx(NotFound, {\n    sliceName: sliceName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 65\n    }\n  });\n});","map":{"version":3,"sources":["/Users/renaudbressand/Work/an-awesome-next-app-this-is-like-the-1000-try/sm-resolver.js"],"names":["Slices","EssentialSlices","__allSlices","NotFound","sliceName","console","log","i"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,MAAZ,MAAwB,UAAxB;AACA,SAASA,MAAM,IAAIC,eAAnB,QAA0C,kBAA1C;;AAEA,MAAMC,WAAW,mCAASD,eAAT,GAA6BD,MAA7B,CAAjB;;AAEA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BF,SAAU,cAApD;AACA,SAAO,OAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeA,SAAf,kBAAxC,GAAoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3F;AACA,CAHD;;AAKA,gBAAe,CAAC;AAAEA,EAAAA,SAAF;AAAaG,EAAAA;AAAb,CAAD,KAAsB;AACpC,SAAOL,WAAW,CAACE,SAAD,CAAX,GAAyBF,WAAW,CAACE,SAAD,CAApC,GAAkD,MAAM,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/D;AACA,CAFD","sourcesContent":["import * as Slices from './slices'\nimport { Slices as EssentialSlices } from 'essential-slices'\n\nconst __allSlices = {  ...EssentialSlices, ...Slices, }\n\nconst NotFound = ({ sliceName }) => {\n\tconsole.log(`[sm - resolver] component \"${sliceName}\" not found.`)\n\treturn process.env.NODE_ENV !== 'production' ? <p>component \"{sliceName}\" not found.</p> : <div />\n}\n\nexport default ({ sliceName, i }) => {\n\treturn __allSlices[sliceName] ? __allSlices[sliceName] : () => <NotFound sliceName={sliceName} />\n}\n\n  "]},"metadata":{},"sourceType":"module"}