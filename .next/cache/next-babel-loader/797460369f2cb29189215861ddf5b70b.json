{"ast":null,"code":"var _jsxFileName = \"/Users/renaudbressand/Work/an-awesome-next-app-this-is-like-the-1000-try/node_modules/next-slicezone/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { pascalize } from 'sm-commons/utils/str';\nimport EmptyState from './EmptyState';\nexport default (({\n  registry = {},\n  slices,\n  endpoint,\n  resolver = () => null\n}) => {\n  if (!slices || !slices.length) {\n    return true ? __jsx(EmptyState, {\n      endpoint: endpoint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }) : null;\n  }\n\n  return slices.map((slice, i) => {\n    const sliceName = pascalize(slice.slice_type);\n    const maybeRegister = registry[sliceName];\n\n    if (!maybeRegister) {\n      if (true) {\n        console.error(`No component was registered for slice of type \"${slice_type}\"`);\n      }\n\n      return null;\n    }\n\n    const Component = typeof maybeRegister === 'object' ? resolver(_objectSpread(_objectSpread({}, maybeRegister), {}, {\n      slice,\n      i\n    })) : maybeRegister;\n\n    if (Component) {\n      return __jsx(Component, {\n        key: `slice-${i + 1}`,\n        slice: slice,\n        i: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return null;\n  });\n});","map":{"version":3,"sources":["/Users/renaudbressand/Work/an-awesome-next-app-this-is-like-the-1000-try/node_modules/next-slicezone/index.js"],"names":["React","pascalize","EmptyState","registry","slices","endpoint","resolver","length","map","slice","i","sliceName","slice_type","maybeRegister","console","error","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,gBAAe,CAAC;AAAEC,EAAAA,QAAQ,GAAG,EAAb;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,QAAQ,GAAG,MAAM;AAApD,CAAD,KAAgE;AAC7E,MAAI,CAACF,MAAD,IAAW,CAACA,MAAM,CAACG,MAAvB,EAA+B;AAC7B,WAAO,OACH,MAAE,UAAF;AAAa,MAAA,QAAQ,EAAEF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,GAEH,IAFJ;AAGD;;AAED,SAAOD,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC9B,UAAMC,SAAS,GAAGV,SAAS,CAACQ,KAAK,CAACG,UAAP,CAA3B;AACA,UAAMC,aAAa,GAAGV,QAAQ,CAACQ,SAAD,CAA9B;;AAEA,QAAI,CAACE,aAAL,EAAoB;AAClB,gBAA2C;AACzCC,QAAAA,OAAO,CAACC,KAAR,CAAe,kDAAiDH,UAAW,GAA3E;AACD;;AACD,aAAO,IAAP;AACD;;AAED,UAAMI,SAAS,GAAG,OAAOH,aAAP,KAAyB,QAAzB,GAAoCP,QAAQ,iCAAMO,aAAN;AAAqBJ,MAAAA,KAArB;AAA4BC,MAAAA;AAA5B,OAA5C,GAA+EG,aAAjG;;AACA,QAAIG,SAAJ,EAAe;AACb,aAAO,MAAC,SAAD;AAAW,QAAA,GAAG,EAAG,SAAQN,CAAC,GAAG,CAAE,EAA/B;AAAkC,QAAA,KAAK,EAAED,KAAzC;AAAiD,QAAA,CAAC,EAAEC,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WAAO,IAAP;AACD,GAhBM,CAAP;AAkBD,CAzBD","sourcesContent":["import React from 'react'\n\nimport { pascalize } from 'sm-commons/utils/str'\nimport EmptyState from './EmptyState'\n\nexport default ({ registry = {}, slices, endpoint, resolver = () => null }) => {\n  if (!slices || !slices.length) {\n    return process.env.NODE_ENV !== 'production'\n      ? < EmptyState endpoint={endpoint} />\n      : null\n  }\n\n  return slices.map((slice, i) => {\n    const sliceName = pascalize(slice.slice_type)\n    const maybeRegister = registry[sliceName]\n\n    if (!maybeRegister) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(`No component was registered for slice of type \"${slice_type}\"`)\n      }\n      return null\n    }\n\n    const Component = typeof maybeRegister === 'object' ? resolver({ ...maybeRegister, slice, i }) : maybeRegister\n    if (Component) {\n      return <Component key={`slice-${i + 1}`} slice={slice}  i={i} />\n    }\n    return null\n  })\n\n}\n"]},"metadata":{},"sourceType":"module"}